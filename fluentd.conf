<source>
  @type tail
  path /var/log/container/backend-server.log
  pos_file /var/pos/backend-server.log.pos
  tag backend-server-b
  <parse>
    @type none
  </parse>
</source>

<filter backend-server-b>
  @type parser
  format /^(?<time>[^ ]* [^ ]*),\d+ - (?<logger>[^ ]*) - (?<level>[^ ]*) - (?<client>[^ ]*) - "(?<method>[^ ]*) (?<path>[^ ]*) (?<protocol>[^ ]*)" (?<status>\d{3})$/
  key_name message
  reserve_data true
</filter>

<filter backend-server-b>
  @type grep
  <regexp>
     key status
     pattern ^(500|501)$
  </regexp>
</filter>

<filter backend-server-b>
  @type record_transformer
  enable_ruby
  <record>
     text "ðŸš¨ *Application Internal Server Error Executed ðŸš¨*\n- *Time* : ${time}\n- *Error Message* : ${record['message']}"
  </record>
</filter>

<match backend-server-b>
  @type http
  endpoint https://hooks.slack.com/services/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
  http_method post
  content_type application/json
  <format>
    @type json
  </format>
  <buffer>
    @type memory
    flush_interval 10s
  </buffer>
</match>

<source>
  @type tail
  path /var/log/container/backend-server.log
  pos_file /var/pos/backend-server-a.log.pos
  tag backend-server-a
  <parse>
    @type none
  </parse>
</source>


<filter backend-server-a>
  @type parser
  key_name message
  <parse>
    @type regexp
    expression /^(?<time>[^ ]* [^ ]*),\d+ - (?<logger>[^ ]*) - (?<level>[^ ]*) - (?<message>.*)$/
  </parse>
</filter>

<filter backend-server-a>
  @type grep
    <regexp>
      key level
      pattern ^ERROR$
    </regexp>
</filter>

<filter backend-server-a>
  @type record_transformer
  enable_ruby
  <record>
     text "ðŸš¨ *Application Internal Server Error Executed ðŸš¨*\n- *Time* : ${time}\n- *Error Message* : ${record['message']}"
  </record>
</filter>

<match backend-server-a>
  @type http
  endpoint https://hooks.slack.com/services/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
  http_method post
  content_type application/json
  <format>
    @type json
  </format>
  <buffer>
    @type memory
    flush_interval 10s
  </buffer>
</match>

<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24220
</source>

<match>
  @type stdout
  <format>
    @type json
  </format>
</match>

<system>
  log_level debug
</system>